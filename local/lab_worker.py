import cx_Oracle
import sys
import argparse
from pathlib import Path
import re
import csv
from datetime import datetime
import config

def init_database():
    # Initialize Oracle database client
    cx_Oracle.init_oracle_client(config.oracle["lib_dir"])
    connection = cx_Oracle.connect(config.oracle["user"], config.oracle["password"], config.oracle["dsn"])
    return connection #return connection

def batch_upload(logfile_dir, uploaded_list, writer):
    # Init database, get cursor
    connection = init_database()
    cursor = connection.cursor()

    # Get a list of logfiles generated by HopperManager
    logfile_list = list(Path(logfile_dir).glob('Measurement*.txt'))

    for filename in logfile_list:
        # Check if file is already uploaded
        for row in uploaded_list:
            if(filename == row['filename']):
                next()

        # Open log file
        file = open(filename, "rt")
        content = file.read()

        # Extract data
        matched_data = re.findall(config.regex_pattern, content)
        
        # Convert data from string to int
        for i in range(0, len(matched_data)):
            matched_data[i] = (int(matched_data[i][0]), matched_data[i][1], int(matched_data[i][2]))

        
        # Upload to database
        cursor.executemany('''
        insert into data(v_level, timestamp, e_level)
        values (:1, to_timestamp(:2, 'HH24:MI:SS DD-MM-YYYY'), :3)
        ''', matched_data)

        # Record filename and current time to csv 
        writer.writerow({'filename': filename, 'upload date': datetime.now().strftime(r"%H:%M:%S %Y-%m-%d")})
   
    # Commit change to database
    connection.commit()


def auto_mode():
    #TODO
    return

def manual_mode(logfile_dir):
    # Initialize csv file, prepare reader and writer for batch_upload function
    csvfile = open("{}\\upload_record.csv".format(logfile_dir), 'a+', newline='')
    tablefield = ["filename", "upload date"]
    # Get a list of already uploaded file from csv
    # TODO There are something wrong with this reader. It can not read any data
    uploaded_list = csv.DictReader(csvfile, fieldnames=tablefield)
    # Init writer
    writer = csv.DictWriter(csvfile, fieldnames=tablefield)
   
    batch_upload(logfile_dir, uploaded_list, writer)

# Handle command line argument
parser = argparse.ArgumentParser(description="This script upload log file generated by HopperManager to a cloud database")
parser.add_argument('--auto', action='store_true')
parser.add_argument('--manual', action='store')
arg = parser.parse_args()

if(arg.auto):
    auto_mode()
elif(arg.manual):
    if(arg.manual.endswith('\\')):
        print("Please supply a directory that does not end with \\")
        sys.exit()
    manual_mode(arg.manual)
